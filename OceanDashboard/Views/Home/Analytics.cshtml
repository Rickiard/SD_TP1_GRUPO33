@model OceanDashboard.Models.AnalyticsViewModel
@{
    ViewData["Title"] = "Análise de Dados";
}

<div class="container-fluid">
    <div class="row mb-4">
        <div class="col-12">
            <h1 class="display-4 text-center mb-3">Análise de Dados Oceânicos</h1>
            <p class="text-muted text-center mb-5">Compare e analise dados recebidos pelo OceanServer</p>
        </div>
    </div>

    <div class="row mb-4">
        <div class="col-12">
            <div class="card shadow-sm border-0">
                <div class="card-body">
                    <form id="filterForm" class="row g-3" method="get">
                        <div class="col-md-4">
                            <label for="startDate" class="form-label">Data Início</label>
                            <input type="datetime-local" class="form-control" id="startDate" name="startDate" 
                                value="@Model.StartDate.ToString("yyyy-MM-ddTHH:mm")" />
                        </div>
                        <div class="col-md-4">
                            <label for="endDate" class="form-label">Data Fim</label>
                            <input type="datetime-local" class="form-control" id="endDate" name="endDate" 
                                value="@Model.EndDate.ToString("yyyy-MM-ddTHH:mm")" />
                        </div>                        <div class="col-md-4">
                            <label for="stationId" class="form-label">Estação</label>
                            <select class="form-select" id="stationId" name="stationId">
                                <option value="all" @(Model.StationId == "all" ? "selected" : "")>Todas</option>
                                @foreach (var station in Model.AvailableStations)
                                {
                                    <option value="@station" @(Model.StationId == station ? "selected" : "")>@station</option>
                                }
                            </select>
                        </div>
                        <div class="col-md-4">
                            <label for="analysisType" class="form-label">Tipo de Análise</label>
                            <select class="form-select" id="analysisType" name="analysisType">
                                <option value="all" @(Model.AnalysisType == "all" ? "selected" : "")>Completa</option>
                                <option value="wave" @(Model.AnalysisType == "wave" ? "selected" : "")>Ondas</option>
                                <option value="wind" @(Model.AnalysisType == "wind" ? "selected" : "")>Vento</option>
                                <option value="temperature" @(Model.AnalysisType == "temperature" ? "selected" : "")>Temperatura</option>
                            </select>
                        </div>
                        <div class="col-md-4">
                            <label for="timeRange" class="form-label">Período</label>
                            <select class="form-select" id="timeRange" name="timeRange">
                                <option value="1h" @(Model.TimeRange == "1h" ? "selected" : "")>Última hora</option>
                                <option value="6h" @(Model.TimeRange == "6h" ? "selected" : "")>Últimas 6 horas</option>
                                <option value="12h" @(Model.TimeRange == "12h" ? "selected" : "")>Últimas 12 horas</option>
                                <option value="24h" @(Model.TimeRange == "24h" ? "selected" : "")>Último dia</option>
                                <option value="48h" @(Model.TimeRange == "48h" ? "selected" : "")>Últimos 2 dias</option>
                                <option value="7d" @(Model.TimeRange == "7d" ? "selected" : "")>Última semana</option>
                                <option value="30d" @(Model.TimeRange == "30d" ? "selected" : "")>Último mês</option>
                                <option value="custom" @(Model.TimeRange == "custom" ? "selected" : "")>Personalizado</option>
                            </select>
                        </div>
                        <div class="col-md-4 d-flex align-items-end">
                            <button type="submit" class="btn btn-primary w-100">
                                <i class="bi bi-search me-2"></i> Analisar Dados
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    @if (Model.AnalysisResult != null && Model.AnalysisResult.Success)
    {
        <div class="row mb-4">
            <div class="col-12">
                <div class="card shadow-sm border-0">
                    <div class="card-header bg-white">                        <ul class="nav nav-tabs card-header-tabs" id="analysisTabs" role="tablist">
                            <li class="nav-item" role="presentation">
                                <button class="nav-link active" id="summary-tab" data-bs-toggle="tab" data-bs-target="#summary" type="button" role="tab">Resumo</button>
                            </li>
                            <li class="nav-item" role="presentation">
                                <button class="nav-link" id="wave-tab" data-bs-toggle="tab" data-bs-target="#wave" type="button" role="tab">Ondas</button>
                            </li>
                            <li class="nav-item" role="presentation">
                                <button class="nav-link" id="wind-tab" data-bs-toggle="tab" data-bs-target="#wind" type="button" role="tab">Vento</button>
                            </li>
                            <li class="nav-item" role="presentation">
                                <button class="nav-link" id="temp-tab" data-bs-toggle="tab" data-bs-target="#temp" type="button" role="tab">Temperatura</button>
                            </li>
                            <li class="nav-item" role="presentation">
                                <button class="nav-link" id="stations-compare-tab" data-bs-toggle="tab" data-bs-target="#stations-compare" type="button" role="tab">Comparação</button>
                            </li>
                            <li class="nav-item" role="presentation">
                                <button class="nav-link" id="raw-data-tab" data-bs-toggle="tab" data-bs-target="#raw-data" type="button" role="tab">Dados Brutos</button>
                            </li>
                        </ul>
                    </div>
                    <div class="card-body">
                        <div class="tab-content" id="analysisTabsContent">
                            <div class="tab-pane fade show active" id="summary" role="tabpanel">
                                <div class="row g-4">
                                    <div class="col-md-3">
                                        <div class="card bg-light">
                                            <div class="card-body text-center">
                                                <h6 class="text-muted mb-2">Total de Registros</h6>
                                                <h2>@Model.AnalysisResult.Statistics.GetValueOrDefault("total_records", 0)</h2>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="card bg-light">
                                            <div class="card-body text-center">
                                                <h6 class="text-muted mb-2">Altura Média das Ondas</h6>
                                                <h2>@Model.AnalysisResult.Statistics.GetValueOrDefault("avg_wave_height", 0).ToString("0.00") m</h2>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="card bg-light">
                                            <div class="card-body text-center">
                                                <h6 class="text-muted mb-2">Velocidade Média do Vento</h6>
                                                <h2>@Model.AnalysisResult.Statistics.GetValueOrDefault("avg_wind_speed", 0).ToString("0.00") kn</h2>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="card bg-light">
                                            <div class="card-body text-center">
                                                <h6 class="text-muted mb-2">Temperatura Média do Mar</h6>
                                                <h2>@Model.AnalysisResult.Statistics.GetValueOrDefault("avg_sea_temp", 0).ToString("0.00") °C</h2>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="row mt-4">
                                    <div class="col-12">
                                        <div class="chart-container comparison-chart">
                                            <canvas id="summaryChart"></canvas>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="tab-pane fade" id="wave" role="tabpanel">
                                <div class="row g-4">
                    @foreach (var stats in Model.AnalysisResult.WaveStatistics)
                                    {
                                        <div class="col-md-6">
                                            <div class="card shadow-sm h-100">
                                                <div class="card-header bg-primary text-white">
                                                    <h5 class="mb-0">@(string.IsNullOrEmpty(stats.Key) || stats.Key == "all" ? "Todas Estações" : stats.Key)</h5>
                                                </div>
                                                <div class="card-body">
                                                    <div class="row text-center g-3">
                                                        <div class="col-6">
                                                            <p class="text-muted mb-1">Altura Média</p>
                                                            <h4>@stats.Value.AvgHeight.ToString("0.00") m</h4>
                                                        </div>
                                                        <div class="col-6">
                                                            <p class="text-muted mb-1">Altura Máxima</p>
                                                            <h4>@stats.Value.MaxHeight.ToString("0.00") m</h4>
                                                        </div>
                                                        <div class="col-6">
                                                            <p class="text-muted mb-1">Período Médio</p>
                                                            <h4>@stats.Value.AvgPeriod.ToString("0.00") s</h4>
                                                        </div>
                                                        <div class="col-6">
                                                            <p class="text-muted mb-1">Direção Predominante</p>
                                                            <h4>@stats.Value.PredominantDirection</h4>
                                                        </div>
                                                    </div>
                                                    <div class="mt-4">
                                                        <div class="chart-container">
                                                            <canvas id="waveChart_@stats.Key.Replace(" ", "_")"></canvas>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>

                            <div class="tab-pane fade" id="wind" role="tabpanel">
                                <div class="row g-4">
                    @foreach (var stats in Model.AnalysisResult.WindStatistics)
                                    {
                                        <div class="col-md-6">
                                            <div class="card shadow-sm h-100">
                                                <div class="card-header bg-info text-white">
                                                    <h5 class="mb-0">@(string.IsNullOrEmpty(stats.Key) || stats.Key == "all" ? "Todas Estações" : stats.Key)</h5>
                                                </div>
                                                <div class="card-body">
                                                    <div class="row text-center g-3">
                                                        <div class="col-6">
                                                            <p class="text-muted mb-1">Velocidade Média</p>
                                                            <h4>@stats.Value.AvgSpeed.ToString("0.00") kn</h4>
                                                        </div>
                                                        <div class="col-6">
                                                            <p class="text-muted mb-1">Rajada Máxima</p>
                                                            <h4>@stats.Value.MaxGust.ToString("0.00") kn</h4>
                                                        </div>
                                                        <div class="col-6">
                                                            <p class="text-muted mb-1">Velocidade Máxima</p>
                                                            <h4>@stats.Value.MaxSpeed.ToString("0.00") kn</h4>
                                                        </div>
                                                        <div class="col-6">
                                                            <p class="text-muted mb-1">Direção Predominante</p>
                                                            <h4>@stats.Value.PredominantDirection</h4>
                                                        </div>
                                                    </div>
                                                    <div class="mt-4">
                                                        <div class="chart-container">
                                                            <canvas id="windChart_@stats.Key.Replace(" ", "_")"></canvas>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>

                            <div class="tab-pane fade" id="temp" role="tabpanel">
                                <div class="row g-4">
                    @foreach (var stats in Model.AnalysisResult.TemperatureStatistics)
                                    {
                                        <div class="col-md-6">
                                            <div class="card shadow-sm h-100">
                                                <div class="card-header bg-success text-white">
                                                    <h5 class="mb-0">@(string.IsNullOrEmpty(stats.Key) || stats.Key == "all" ? "Todas Estações" : stats.Key)</h5>
                                                </div>
                                                <div class="card-body">
                                                    <div class="row text-center g-3">
                                                        <div class="col-6">
                                                            <p class="text-muted mb-1">Temp. Mar Média</p>
                                                            <h4>@stats.Value.AvgSeaTemp.ToString("0.00") °C</h4>
                                                        </div>
                                                        <div class="col-6">
                                                            <p class="text-muted mb-1">Temp. Mar Máxima</p>
                                                            <h4>@stats.Value.MaxSeaTemp.ToString("0.00") °C</h4>
                                                        </div>
                                                        <div class="col-6">
                                                            <p class="text-muted mb-1">Temp. Ar Média</p>
                                                            <h4>@stats.Value.AvgAirTemp.ToString("0.00") °C</h4>
                                                        </div>
                                                        <div class="col-6">
                                                            <p class="text-muted mb-1">Umidade Média</p>
                                                            <h4>@stats.Value.AvgHumidity.ToString("0.00") %</h4>
                                                        </div>
                                                    </div>
                                                    <div class="mt-4">
                                                        <div class="chart-container">
                                                            <canvas id="tempChart_@stats.Key.Replace(" ", "_")"></canvas>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>

                            <!-- Tab de Comparação por Estações -->
                            <div class="tab-pane fade" id="stations-compare" role="tabpanel">
                                <div class="row mb-4">
                                    <div class="col-12">
                                        <h4 class="mb-3">Comparação entre Estações</h4>
                                        <p class="text-muted">Análise comparativa dos dados por estação</p>
                                    </div>
                                </div>

                                @if (Model.AnalysisResult.WindStatistics.Count > 1 || Model.AnalysisResult.WaveStatistics.Count > 1 || Model.AnalysisResult.TemperatureStatistics.Count > 1)
                                {
                                    <div class="row">
                                        <div class="col-12 mb-4">
                                            <div class="card shadow-sm">
                                                <div class="card-header bg-white">
                                                    <h5 class="card-title mb-0">Comparação de Altura Significativa de Onda</h5>
                                                </div>
                                                <div class="card-body">
                                                    <table class="table table-hover">
                                                        <thead>
                                                            <tr>
                                                                <th>Estação</th>
                                                                <th>Altura Significativa (H1/3)</th>
                                                                <th>Altura Máxima</th>
                                                                <th>Período Médio</th>
                                                                <th>Direção Predominante</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            @foreach (var station in Model.AnalysisResult.WaveStatistics)
                                                            {
                                                                <tr>
                                                                    <td><strong>@(station.Key == "overall" ? "Geral" : station.Key)</strong></td>
                                                                    <td>@station.Value.SignificantWaveHeight.ToString("F2") m</td>
                                                                    <td>@station.Value.MaxHeight.ToString("F2") m</td>
                                                                    <td>@station.Value.AvgPeriod.ToString("F1") s</td>
                                                                    <td>@station.Value.PredominantDirection</td>
                                                                </tr>
                                                            }
                                                        </tbody>
                                                    </table>
                                                </div>
                                            </div>
                                        </div>
                                        
                                        <div class="col-12 mb-4">
                                            <div class="card shadow-sm">
                                                <div class="card-header bg-white">
                                                    <h5 class="card-title mb-0">Comparação de Vento</h5>
                                                </div>
                                                <div class="card-body">
                                                    <table class="table table-hover">
                                                        <thead>
                                                            <tr>
                                                                <th>Estação</th>
                                                                <th>Velocidade Média</th>
                                                                <th>Rajada Máxima</th>
                                                                <th>Fator de Rajada</th>
                                                                <th>Direção Predominante</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            @foreach (var station in Model.AnalysisResult.WindStatistics)
                                                            {
                                                                <tr>
                                                                    <td><strong>@(station.Key == "overall" ? "Geral" : station.Key)</strong></td>
                                                                    <td>@station.Value.AvgSpeed.ToString("F1") nós</td>
                                                                    <td>@station.Value.MaxGust.ToString("F1") nós</td>
                                                                    <td>@(station.Value.GustFactor > 0 ? station.Value.GustFactor.ToString("F2") : "N/A")</td>
                                                                    <td>@station.Value.PredominantDirection</td>
                                                                </tr>
                                                            }
                                                        </tbody>
                                                    </table>
                                                </div>
                                            </div>
                                        </div>
                                        
                                        <div class="col-12 mb-4">
                                            <div class="card shadow-sm">
                                                <div class="card-header bg-white">
                                                    <h5 class="card-title mb-0">Comparação de Temperatura</h5>
                                                </div>
                                                <div class="card-body">
                                                    <table class="table table-hover">
                                                        <thead>
                                                            <tr>
                                                                <th>Estação</th>
                                                                <th>Temp. Mar Média</th>
                                                                <th>Temp. Ar Média</th>
                                                                <th>Diferença Média Ar-Mar</th>
                                                                <th>Umidade Média</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            @foreach (var station in Model.AnalysisResult.TemperatureStatistics)
                                                            {
                                                                <tr>
                                                                    <td><strong>@(station.Key == "overall" ? "Geral" : station.Key)</strong></td>
                                                                    <td>@station.Value.AvgSeaTemp.ToString("F1") °C</td>
                                                                    <td>@station.Value.AvgAirTemp.ToString("F1") °C</td>
                                                                    <td>@(station.Value.AvgTempDifference.ToString("F1")) °C</td>
                                                                    <td>@(station.Value.AvgHumidity > 0 ? station.Value.AvgHumidity.ToString("F0") + "%" : "N/A")</td>
                                                                </tr>
                                                            }
                                                        </tbody>
                                                    </table>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="alert alert-info">
                                        Selecione mais de uma estação ou "Todas" para visualizar dados comparativos.
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Tab de Dados Brutos e Exportação -->
        <div class="row mb-4">
            <div class="col-12">
                <div class="card shadow-sm">
                    <div class="card-header bg-white d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">Dados Brutos</h5>
                        <div>
                            <a href="@Url.Action("ExportToCsv", "Export", new { startDate = Model.StartDate, endDate = Model.EndDate, stationId = Model.StationId })" 
                               class="btn btn-success btn-sm me-2">
                                <i class="bi bi-file-earmark-excel me-1"></i> CSV
                            </a>
                            <a href="@Url.Action("ExportToJson", "Export", new { startDate = Model.StartDate, endDate = Model.EndDate, stationId = Model.StationId })" 
                               class="btn btn-primary btn-sm me-2">
                                <i class="bi bi-file-earmark-code me-1"></i> JSON
                            </a>
                            <button type="button" class="btn btn-outline-secondary btn-sm" id="copyToClipboardBtn">
                                <i class="bi bi-clipboard me-1"></i> Copiar
                            </button>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-striped" id="oceanDataTable">                                <thead>
                                    <tr>
                                        <th>Data/Hora</th>
                                        <th>Estação</th>
                                        <th>Altura Onda (m)</th>
                                        <th>Período (s)</th>
                                        <th>Direção Onda (°)</th>
                                        <th>Velocidade Vento (kn)</th>
                                        <th>Temp. Água (°C)</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var data in Model.OceanData.Take(100))
                                    {
                                        <tr>
                                            <td>@data.Timestamp.ToLocalTime().ToString("dd/MM/yyyy HH:mm:ss")</td>
                                            <td>@data.StationId</td>
                                            <td>@data.WaveHeight.ToString("0.00")</td>
                                            <td>@data.WavePeriod.ToString("0.00")</td>
                                            <td>@data.WaveDirection.ToString("0.00")</td>
                                            <td>@data.WindSpeed.ToString("0.00")</td>
                                            <td>@data.SeaTemperature.ToString("0.00")</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                            @if (Model.OceanData.Count > 100)
                            {
                                <div class="text-center text-muted">
                                    <small>Exibindo 100 de @Model.OceanData.Count registros. Exporte para ver todos.</small>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    else if (Model.AnalysisResult != null)
    {
        <div class="alert alert-warning">
            <i class="bi bi-exclamation-triangle me-2"></i>
            @Model.AnalysisResult.ErrorMessage
        </div>
    }
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js@3.9.1/dist/chart.min.js"></script>
    <script>
        // Inicialização quando o documento estiver pronto
        $(document).ready(function() {
            // Manipulação do formulário de filtros
            setupFilterForm();
            
            @if (Model.AnalysisResult != null && Model.AnalysisResult.Success)
            {
                <text>
                // Inicializar gráficos
                initSummaryChart();
                initWaveCharts();
                initWindCharts();
                initTempCharts();
                
                // Configurar exportação de dados
                setupExportButton();
                </text>
            }
        });
        
        function setupFilterForm() {
            // Se o timeRange for "custom", mostra as datas, senão esconde
            $("#timeRange").change(function() {
                if ($(this).val() === "custom") {
                    $("#startDate").closest(".col-md-4").show();
                    $("#endDate").closest(".col-md-4").show();
                } else {
                    $("#startDate").closest(".col-md-4").hide();
                    $("#endDate").closest(".col-md-4").hide();
                }
            }).trigger("change");
        }
        
        function initSummaryChart() {
            const ctx = document.getElementById('summaryChart').getContext('2d');
            new Chart(ctx, {
                type: 'line',
                data: {
                    labels: @Html.Raw(Json.Serialize(Model.OceanData.Select(d => d.Timestamp.ToLocalTime().ToString("dd/MM HH:mm")).ToArray())),
                    datasets: [
                        {
                            label: 'Altura das Ondas (m)',
                            data: @Html.Raw(Json.Serialize(Model.OceanData.Select(d => d.WaveHeight).ToArray())),
                            borderColor: 'rgba(54, 162, 235, 1)',
                            backgroundColor: 'rgba(54, 162, 235, 0.2)',
                            yAxisID: 'y',
                            tension: 0.3
                        },
                        {
                            label: 'Velocidade do Vento (kn)',
                            data: @Html.Raw(Json.Serialize(Model.OceanData.Select(d => d.WindSpeed).ToArray())),
                            borderColor: 'rgba(255, 159, 64, 1)',
                            backgroundColor: 'rgba(255, 159, 64, 0.2)',
                            yAxisID: 'y1',
                            tension: 0.3
                        },
                        {
                            label: 'Temperatura do Mar (°C)',
                            data: @Html.Raw(Json.Serialize(Model.OceanData.Select(d => d.SeaTemperature).ToArray())),
                            borderColor: 'rgba(75, 192, 192, 1)',
                            backgroundColor: 'rgba(75, 192, 192, 0.2)',
                            yAxisID: 'y2',
                            tension: 0.3
                        }
                    ]
                },
                options: {
                    responsive: true,
                    interaction: {
                        mode: 'index',
                        intersect: false,
                    },
                    stacked: false,
                    plugins: {
                        title: {
                            display: true,
                            text: 'Visão Geral dos Dados Oceânicos'
                        }
                    },
                    scales: {
                        y: {
                            type: 'linear',
                            display: true,
                            position: 'left',
                            title: {
                                display: true,
                                text: 'Altura (m)'
                            }
                        },
                        y1: {
                            type: 'linear',
                            display: true,
                            position: 'right',
                            title: {
                                display: true,
                                text: 'Vento (kn)'
                            },
                            grid: {
                                drawOnChartArea: false
                            }
                        },
                        y2: {
                            type: 'linear',
                            display: true,
                            position: 'right',
                            title: {
                                display: true,
                                text: 'Temp. (°C)'
                            },
                            grid: {
                                drawOnChartArea: false
                            }
                        }
                    }
                }
            });
        }
        
        function initWaveCharts() {
            @foreach (var stats in Model.AnalysisResult.WaveStatistics)
            {
                <text>                const waveCtx_@(stats.Key.Replace(" ", "_")) = document.getElementById('waveChart_@(stats.Key.Replace(" ", "_"))').getContext('2d');
                new Chart(waveCtx_@(stats.Key.Replace(" ", "_")), {
                    type: 'line',
                    data: {
                        labels: @Html.Raw(Json.Serialize(Model.OceanData.Where(d => string.IsNullOrEmpty(stats.Key) || stats.Key == "all" || d.StationId == stats.Key).Select(d => d.Timestamp.ToLocalTime().ToString("dd/MM HH:mm")).ToArray())),
                        datasets: [
                            {
                                label: 'Altura das Ondas (m)',
                                data: @Html.Raw(Json.Serialize(Model.OceanData.Where(d => string.IsNullOrEmpty(stats.Key) || stats.Key == "all" || d.StationId == stats.Key).Select(d => d.WaveHeight).ToArray())),
                                borderColor: 'rgba(54, 162, 235, 1)',
                                backgroundColor: 'rgba(54, 162, 235, 0.2)',
                                tension: 0.3
                            },
                            {
                                label: 'Período das Ondas (s)',
                                data: @Html.Raw(Json.Serialize(Model.OceanData.Where(d => string.IsNullOrEmpty(stats.Key) || stats.Key == "all" || d.StationId == stats.Key).Select(d => d.WavePeriod).ToArray())),
                                borderColor: 'rgba(75, 192, 192, 1)',
                                backgroundColor: 'rgba(75, 192, 192, 0.2)',
                                tension: 0.3
                            }
                        ]
                    },
                    options: {
                        responsive: true,
                        plugins: {
                            title: {
                                display: true,
                                text: 'Altura e Período das Ondas'
                            }
                        }
                    }
                });
                </text>
            }
        }
        
        function initWindCharts() {
            @foreach (var stats in Model.AnalysisResult.WindStatistics)
            {
                <text>                const windCtx_@(stats.Key.Replace(" ", "_")) = document.getElementById('windChart_@(stats.Key.Replace(" ", "_"))').getContext('2d');
                new Chart(windCtx_@(stats.Key.Replace(" ", "_")), {
                    type: 'line',
                    data: {
                        labels: @Html.Raw(Json.Serialize(Model.OceanData.Where(d => string.IsNullOrEmpty(stats.Key) || stats.Key == "all" || d.StationId == stats.Key).Select(d => d.Timestamp.ToLocalTime().ToString("dd/MM HH:mm")).ToArray())),
                        datasets: [
                            {
                                label: 'Velocidade do Vento (kn)',
                                data: @Html.Raw(Json.Serialize(Model.OceanData.Where(d => string.IsNullOrEmpty(stats.Key) || stats.Key == "all" || d.StationId == stats.Key).Select(d => d.WindSpeed).ToArray())),
                                borderColor: 'rgba(255, 159, 64, 1)',
                                backgroundColor: 'rgba(255, 159, 64, 0.2)',
                                tension: 0.3
                            },
                            {
                                label: 'Rajadas (kn)',
                                data: @Html.Raw(Json.Serialize(Model.OceanData.Where(d => string.IsNullOrEmpty(stats.Key) || stats.Key == "all" || d.StationId == stats.Key).Select(d => d.Gust).ToArray())),
                                borderColor: 'rgba(255, 99, 132, 1)',
                                backgroundColor: 'rgba(255, 99, 132, 0.2)',
                                tension: 0.3
                            }
                        ]
                    },
                    options: {
                        responsive: true,
                        plugins: {
                            title: {
                                display: true,
                                text: 'Velocidade do Vento e Rajadas'
                            }
                        }
                    }
                });
                </text>
            }
        }
        
        function initTempCharts() {
            @foreach (var stats in Model.AnalysisResult.TemperatureStatistics)
            {
                <text>                const tempCtx_@(stats.Key.Replace(" ", "_")) = document.getElementById('tempChart_@(stats.Key.Replace(" ", "_"))').getContext('2d');
                new Chart(tempCtx_@(stats.Key.Replace(" ", "_")), {
                    type: 'line',
                    data: {
                        labels: @Html.Raw(Json.Serialize(Model.OceanData.Where(d => string.IsNullOrEmpty(stats.Key) || stats.Key == "all" || d.StationId == stats.Key).Select(d => d.Timestamp.ToLocalTime().ToString("dd/MM HH:mm")).ToArray())),
                        datasets: [
                            {
                                label: 'Temperatura do Mar (°C)',
                                data: @Html.Raw(Json.Serialize(Model.OceanData.Where(d => string.IsNullOrEmpty(stats.Key) || stats.Key == "all" || d.StationId == stats.Key).Select(d => d.SeaTemperature).ToArray())),
                                borderColor: 'rgba(75, 192, 192, 1)',
                                backgroundColor: 'rgba(75, 192, 192, 0.2)',
                                tension: 0.3
                            },
                            {
                                label: 'Temperatura do Ar (°C)',
                                data: @Html.Raw(Json.Serialize(Model.OceanData.Where(d => string.IsNullOrEmpty(stats.Key) || stats.Key == "all" || d.StationId == stats.Key).Select(d => d.AirTemperature).ToArray())),
                                borderColor: 'rgba(153, 102, 255, 1)',
                                backgroundColor: 'rgba(153, 102, 255, 0.2)',
                                tension: 0.3
                            }
                        ]
                    },
                    options: {
                        responsive: true,
                        plugins: {
                            title: {
                                display: true,
                                text: 'Temperatura do Mar e do Ar'
                            }
                        }
                    }
                });
                </text>
            }
        }
        
        function setupExportButton() {
            $("#exportDataBtn").click(function() {
                // Coletar dados da tabela
                let csvContent = "data:text/csv;charset=utf-8,";
                
                // Cabeçalhos
                csvContent += "Data/Hora,Localização,Altura Onda (m),Período (s),Direção Onda (°),Velocidade Vento (kn),Temperatura Água (°C)\n";
                
                // Dados
                @foreach (var data in Model.OceanData)
                {
                    <text>
                    csvContent += "@(data.Timestamp.ToLocalTime().ToString("dd/MM/yyyy HH:mm:ss")),\"@(data.Location)\",@(data.WaveHeight.ToString("0.00")),@(data.WavePeriod.ToString("0.00")),@(data.WaveDirection.ToString("0.00")),@(data.WindSpeed.ToString("0.00")),@(data.SeaTemperature.ToString("0.00"))\n";
                    </text>
                }
                
                // Criar link de download
                var encodedUri = encodeURI(csvContent);
                var link = document.createElement("a");
                link.setAttribute("href", encodedUri);
                link.setAttribute("download", "ocean_data_export_" + new Date().toISOString().slice(0,10) + ".csv");
                document.body.appendChild(link);
                
                // Iniciar download
                link.click();
                document.body.removeChild(link);
            });
        }
    </script>
}

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Inicializar tabelas com DataTables para melhor usabilidade
            if (document.getElementById('rawDataTable')) {
                $('#rawDataTable').DataTable({
                    responsive: true,
                    pageLength: 25,
                    language: {
                        url: '//cdn.datatables.net/plug-ins/1.13.4/i18n/pt-BR.json'
                    }
                });
            }
            
            // Função para copiar dados da tabela para a área de transferência
            document.getElementById('copyToClipboardBtn')?.addEventListener('click', function() {
                const table = document.getElementById('rawDataTable');
                if (!table) return;
                
                // Extrair dados da tabela
                let data = [];
                const headers = [];
                
                // Obter cabeçalhos
                const headerCells = table.querySelectorAll('thead th');
                headerCells.forEach(cell => headers.push(cell.textContent.trim()));
                data.push(headers.join('\t'));
                
                // Obter linhas de dados
                const rows = table.querySelectorAll('tbody tr');
                rows.forEach(row => {
                    const rowData = [];
                    const cells = row.querySelectorAll('td');
                    cells.forEach(cell => rowData.push(cell.textContent.trim()));
                    data.push(rowData.join('\t'));
                });
                
                // Copiar para a área de transferência
                navigator.clipboard.writeText(data.join('\n'))
                    .then(() => {
                        alert('Dados copiados para a área de transferência!');
                    })
                    .catch(err => {
                        console.error('Erro ao copiar: ', err);
                        alert('Não foi possível copiar os dados. Tente novamente.');
                    });
            });
            
            // Atualizar labels dinâmicos de períodos de tempo
            document.getElementById('timeRange')?.addEventListener('change', function() {
                const customDateFields = document.querySelectorAll('.custom-date-fields');
                if (this.value === 'custom') {
                    customDateFields.forEach(field => field.classList.remove('d-none'));
                } else {
                    customDateFields.forEach(field => field.classList.add('d-none'));
                }
            });
        });
    </script>
}
